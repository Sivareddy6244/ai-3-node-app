---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chroma-server
  namespace: bilvantisai
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chroma-server
  template:
    metadata:
      labels:
        app: chroma-server
    spec:
      nodeSelector:
        role: primary
      containers:
        - name: chroma-server
          image: us-central1-docker.pkg.dev/bt-dev-388506/milvus2/chroma:0.5.16  # Using the appropriate image 
          ports:
            - containerPort: 8000
          env:
            - name: MONGO_HOST
              value: mongo-server
            - name: ES_HOST
              value: elasticsearch-server
            - name: CHROMA_HOST
              value: chroma-server
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: OPENAI_API_KEY
            - name: ELASTICSEARCH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: ELASTICSEARCH_API_KEY
            - name: ELASTICSEARCH_CLOUD_ID
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: ELASTICSEARCH_CLOUD_ID
            - name: NEO4J_URI
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: NEO4J_URI
            - name: NEO4J_USERNAME
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: NEO4J_USERNAME
            - name: NEO4J_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: NEO4J_PASSWORD
            - name: GROQ_API_KEY
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: GROQ_API_KEY
            - name: TAVILY_API_KEY
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: TAVILY_API_KEY
            - name: LANGCHAIN_API_KEY
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: LANGCHAIN_API_KEY
            - name: LANGCHAIN_PROJECT
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: LANGCHAIN_PROJECT
            - name: LANGCHAIN_TRACING_V2
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: LANGCHAIN_TRACING_V2
            - name: KMP_DUPLICATE_LIB_OK
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: KMP_DUPLICATE_LIB_OK
            - name: HUGGING_FACE_HUB_KEY
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: HUGGING_FACE_HUB_KEY
            - name: TOKENIZERS_PARALLELISM
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: TOKENIZERS_PARALLELISM
            - name: GOOGLE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: GOOGLE_API_KEY
            - name: SERVICE_ACC
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: SERVICE_ACC
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: my-env-secret-bilvantisai
                  key: AWS_SECRET_ACCESS_KEY  
          # volumeMounts:
          #   - name: chroma-storage
          #     mountPath: /data/chroma  # Mounting hostPath for Chroma storage
          # resources:
          #   requests:
          #     memory: "512Mi"
          #     cpu: "500m"
          #   limits:
          #     memory: "1Gi"
          #     cpu: "1"
      # volumes:
      #   - name: chroma-storage
      #     hostPath:
      #       path: /mnt/chroma-data  # Host directory for Chroma data
      #       type: DirectoryOrCreate  # Ensures the directory is created if it doesn't exist
          volumeMounts:
            - name: chroma-storage
              mountPath: /data/chroma  # Mounting Persistent Volume for Chroma storage
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1"
      volumes:
        - name: chroma-storage
          persistentVolumeClaim:
            claimName: chroma-pvc  

---
apiVersion: v1
kind: Service
metadata:
  name: chroma-server
  namespace: bilvantisai
spec:
  selector:
    app: chroma-server
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP

